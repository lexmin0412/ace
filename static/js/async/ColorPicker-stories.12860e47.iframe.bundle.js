"use strict";(self.webpackChunk_lexmin0412_ace=self.webpackChunk_lexmin0412_ace||[]).push([["22"],{"./stories/ColorPicker.stories.tsx":function(e,r,n){n.r(r),n.d(r,{BasicUsage:function(){return d},CustomCurrentLabel:function(){return i},__namedExportsOrder:function(){return u},default:function(){return c}});var o=n("./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js"),t=n("./node_modules/.pnpm/react@19.0.0/node_modules/react/index.js"),s=n("./node_modules/.pnpm/@storybook+test@8.4.7_storybook@8.4.7/node_modules/@storybook/test/dist/index.mjs"),l=n("./src/index.tsx"),a=n("./node_modules/.pnpm/antd@5.23.0_react-dom@18.1.0_react@19.0.0/node_modules/antd/es/button/index.js");let c={title:"Example/ColorPicker",component:l.zH,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{},args:{onChange:(0,s.fn)()}},d={args:{children:(0,o.jsx)(o.Fragment,{children:"请选择"})},render:function(e){let[r,n]=(0,t.useState)("#000");return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(l.zH,{value:r,onChange:e=>{n(e)},children:(0,o.jsx)(a.ZP,{style:{color:r,borderColor:r,marginRight:"20px"},children:"Pick Color"})}),(0,o.jsxs)("span",{style:{color:r},children:["currentColor: ",r]})]})}},i={args:{labelForSelected:"Using",children:(0,o.jsx)(o.Fragment,{children:"请选择"})},render:()=>{let[e,r]=(0,t.useState)("#000");return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(l.zH,{labelForSelected:"Using",value:e,onChange:e=>{r(e)},children:(0,o.jsx)(a.ZP,{style:{color:e,borderColor:e,marginRight:"20px"},children:"Pick Color"})}),(0,o.jsxs)("span",{style:{color:e},children:["currentColor: ",e]})]})}},u=["BasicUsage","CustomCurrentLabel"];d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>请选择</>\n  },\n  render: function Render(args) {\n    const [color, setColor] = useState("#000");\n    const handleChange = (value: string) => {\n      setColor(value);\n    };\n    return <>\n        <ColorPicker value={color} onChange={handleChange}>\n          <Button style={{\n          color: color,\n          borderColor: color,\n          marginRight: "20px"\n        }}>\n            Pick Color\n          </Button>\n        </ColorPicker>\n        <span style={{\n        color: color\n      }}>currentColor: {color}</span>\n      </>;\n  }\n}',...d.parameters?.docs?.source}}},i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:"{\n  args: {\n    labelForSelected: \"Using\",\n    children: <>请选择</>\n  },\n  render: () => {\n    const [color, setColor] = useState('#000');\n    const handleChange = (value: string) => {\n      setColor(value);\n    };\n    return <>\n        <ColorPicker labelForSelected=\"Using\" value={color} onChange={handleChange}>\n          <Button style={{\n          color: color,\n          borderColor: color,\n          marginRight: '20px'\n        }}>\n            Pick Color\n          </Button>\n        </ColorPicker>\n        <span style={{\n        color: color\n      }}>currentColor: {color}</span>\n      </>;\n  }\n}",...i.parameters?.docs?.source}}}}}]);